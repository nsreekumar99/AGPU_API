// <auto-generated />
using System;
using AGPU_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AGPU_API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240713041309_EditedImageVarInApplicationDbContext")]
    partial class EditedImageVarInApplicationDbContext
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AGPU_API.Models.AGPU", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("AverageBenchPercentage")
                        .HasColumnType("float");

                    b.Property<string>("Brand")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Images")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("ValuePercentage")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("AGPUs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AverageBenchPercentage = 100.0,
                            Brand = "Nvidia",
                            Images = "[\"/Uploads/GPU/RTX_3060.jpg\"]",
                            Model = "RTX 3060",
                            Name = "Nvidia RTX 3060",
                            Price = 28000m,
                            ReleaseDate = new DateTime(2021, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ValuePercentage = 94.799999999999997
                        },
                        new
                        {
                            Id = 2,
                            AverageBenchPercentage = 71.400000000000006,
                            Brand = "Nvidia",
                            Images = "[\"/Uploads/GPU/GTX_1660SUPER.jpg\"]",
                            Model = "GTX 1660S (Super)",
                            Name = "Nvidia GTX 1660S (Super)",
                            Price = 20000m,
                            ReleaseDate = new DateTime(2019, 10, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ValuePercentage = 70.799999999999997
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
